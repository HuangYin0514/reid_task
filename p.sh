The experiments reported were conducted in our college laboratory, utilizing existing infrastructure. The experimental setup comprised a server equipped with a Tesla P100 graphics card, an Intel Xeon CPU, and 13 GB of RAM, running on an Ubuntu 20.04 operating system. The algorithm was implemented using Python 3.9 and the PyTorch deep learning framework, with PyCharm as the integrated development environment.
To assess the effectiveness of our proposed method, we implemented it in three different systems: a double pendulum system, a coupled pendulum system, and a scissor-type deployable mast system. In investigating the double pendulum system, we utilized dynamic equations to build a comprehensive dataset, comprising both a training set and a test set. The training set encompasses 100 samples with distinct initial conditions, and their evolution processes within the time range t=[0,5] are meticulously documented. For robust model training, we intentionally selected mutually independent initial conditions to capture the intricacies and diversity of the system's behavior. The test set consists of 100 samples with different initial conditions and no overlap with the training set samples. Their evolution processes within the time range t=[0,15] are recorded. The design of this dataset aims to fully elucidate the generalization performance of the adopted methods in response to dynamic changes in the system. In the case of the coupled pendulum system, we applied the same methodology for generating both the training and test sets as employed in the double pendulum system, ensuring consistency throughout the study. While investigating the scissor-type deployable mast system, we calculated the expected trajectories of the system in accordance with mission design requirements. This process aimed to generate the essential datasets necessary for training neural networks. For model optimization, we applied the Adam algorithm, initializing weights from a normal distribution. The Tanh activation function was employed in this process. The configuration for multiscale frequency segments involved setting the number to 5, with scaling factors specified as {1, 2, 4, 8, 16}. To solve the dynamical system, we employed the dopri5 ODE solver with a time step of 0.01 seconds and used a relative tolerance error of 1e-6 along with an absolute tolerance error of 1e-9. These choices were made for their accuracy and stability.
We employed the mean squared error (MSE) as an evaluation metric to assess the performance of the dynamical system learning method 34. The MSE was utilized to assess the performance of the method using different error metrics, namely the position error and the energy violation error. The position error, denoted as MSEq, is calculated according to Equation (13). This metric quantifies the deviation between the predicted and actual system states. Similarly, the energy violation error, denoted as MSEE, is determined using Equation (14). This error metric measures the extent to which the method violates the energy constraints of the system.
		(13)

		(14)
where N stands for the number of samples in the dataset. The vectors  and  correspond to the true state, while  and  denote the predicted state. The function E(Â·) represents the total energy associated with the system.
4.1  |Coupled pendulum system
The coupled pendulum system is composed of three pendulums interconnected by two elastic springs. The system also experiences stiffness problems when the springs are deformed elastically. The Lagrangian function is defined by Equation (15).

		(15)
where r and k represent the undeformed length and stiffness coefficient of the spring, respectively. For our experiments, we set l1=l2=l3=1 m, m1=100 kg, m2=m3=1 kg, r1=r2=1 m, and k=10 N/m.
When assessing the efficacy of our method within the context of a coupled pendulum system, the evaluation of performance involves the quantification of the MSE pertaining to the predicted position and energy of the pendulum. The trajectory of a coupled pendulum system is visually depicted in Figure 3, providing valuable insights into the underlying dynamics. Notably, a comparative analysis with the reference solution elucidates discernible distinctions between the Node method and the MechanicsNN method, whereas the CLNN and MDANN methods exhibit a higher level of concordance.
Table 1 provides a thorough performance evaluation, demonstrating that our method attains MSEq of 3.214e-2 and MSEE of 2.590e-3. To further elucidate these findings, Figure 4 illustrates the temporal evolution of errors, offering a dynamic perspective on the system's behavior. Notably, as the system evolves, the inherent complexity of its dynamics gradually intensifies, resulting in an escalating relative error. Nevertheless, our proposed method consistently outperforms alternative approaches, affirming its effectiveness in comprehensively capturing and simulating the behavior of rigid systems undergoing elastic deformation.


Figure 3 Comparison of results for coupled pendulum system: (A) ground truth, (B) Node, (C) MechanicsNN, (D) CLNN, (E) MDANN.
Table 1 MSE comparison of results for coupled pendulum system.
Method	MSEq	MSEE
Node	2.353e-01 +/- 1.063e-01	6.922e+02 +/- 6.891e+02
MechanicsNN	4.727e-02 +/- 7.575e-03	1.306e+01 +/- 8.625e+00
CLNN  	4.343e-02 +/- 8.331e-03	2.490e+00 +/- 1.426e+00
MDANN  	3.214e-02 +/- 1.132e-02	2.590e-02 +/- 1.366e-02


Figure 4 Accumulated MSE over time for coupled pendulum system: (A) MSE of position, (B) MSE of energy.
4.2  |Double pendulum system
The double pendulum system is composed of two small balls connected by massless rods. When the masses of the two pendulums differ significantly, the system experiences a stiffness problem. Its Lagrangian function is defined by Equation (16).
		(16)
where mi represents the mass of the i-th object, g represents the acceleration of gravity in the x(2) direction, and x(2) represents the position of the object in that direction. For our experiments, we used l1=l2=1 m, m1=1 kg, and m2=100 kg.
The efficacy of the proposed method is assessed through its application to a double pendulum system. The obtained results are presented in Table 2. The MSE for the proposed method's position is 9.638e-02, while the MSE for energy is 5.091e-01. In contrast, both Node and MechanicsNN exhibit signs of overfitting, underscoring their limitations in accurately capturing the evolution equations of the system, particularly in the face of substantial changes in mass. Remarkably, our proposed method outperforms CLNN in terms of both MSE metrics, highlighting its superior performance.
The trajectory of the double pendulum system is depicted in Figure 5, illustrating the precision of our method in predicting the system trajectory while adhering to fundamental physical principles. Figure 6 illustrates the temporal accumulation of errors, further emphasizing the superiority of our proposed method over alternative methods. Experimental findings substantiate the effectiveness of our proposed methodology in acquiring knowledge of rigid system dynamics.
We conducted an experiment to examine the impact of stiffness on the learning ability of a dynamical system using a double pendulum system. The stiffness of the system is determined by the disparity in speed between its subprocesses. To manipulate the stiffness, we adjusted the mass parameter m2 with values of 100, 200, 300, and 400, thereby influencing the stiffness of the system. As the mass difference increases, so does the velocity difference between the subprocesses. The box plot in Figure 7 illustrates the variation in MSEE associated with the mass parameter. The results indicate a discernible upward trend in the energy error as the system rigidity gradually intensifies. This escalation contributes to heightened complexity and poses challenges to the system's learning process. Nevertheless, our proposed method yields superior results in energy retention compared to other methods for learning dynamical systems. In conclusion, the proposed method effectively learns dynamical systems even under rigid conditions.


Figure 5 Comparison of results for double pendulum system: (A) ground truth, (B) Node, (C) MechanicsNN, (D) CLNN, (E) MDANN.
Table 2 MSE comparison of results for double pendulum system.
Method	MSEq	MSEE
Node	7.777e+01 +/- 3.742e+01	7.077e+05 +/- 3.868e+05
MechanicsNN	7.132e+00 +/- 1.315e+01	1.970e+05 +/- 4.908e+05 
CLNN  	1.345e-01 +/- 2.838e-02	5.453e+01 +/- 4.340e+01
MDANN  	9.638e-02 +/- 6.056e-02	5.091e-01 +/- 5.553e-01


Figure 6 Accumulated MSE over time for double pendulum system: (A) MSE of position, (B) MSE of energy.

Figure 7 Comparison of energy results for double pendulum systems with different masses.
4.3  |Scissor-type deployable mast system
The proposed method is subsequently applied in the context of a scissor-type deployable mast system 40. The scissor-type deployable mast belongs to a category of structures with a negative Poisson's ratio that offer significant utility in the aerospace domain. These units possess a distinctive capability, enabling seamless transitions between two distinct states: a compact, folded configuration during ground handling and launch, and the ability to dynamically expand upon reaching a designated orbital position. The dynamic expansion phase of this process carries the potential for failures. Thus, it is a necessity to conduct an analysis of the expanding process of scissor-type deployable masts through dynamic simulations and optimize the control forces required during the design phase. In this context, the proposed MDANN method is employed to optimize the control forces, ensuring a smooth and expeditious expansion of the scissor-type deployable mast.
The system is composed of multiple expandable units. Each expandable unit primarily consists of scissor hinges, orthogonal double-joint components, and sliding components configured in a rational manner to provide it with the capability to fold and expand, as illustrated in Figure 8. Each side of the unit incorporates a scissor hinge, while the upper and lower ends are connected by orthogonal double-rotary joints and sliding joint components. The system bears a certain load at its top. Applying a driving force, the bottom orthogonal double-joint actuators move along the diagonals of the bottom quadrilateral, thereby achieving the folding and expanding function of the unit. Throughout this process, the length of the scissor rods remains constant, while the transverse rods adjust their length through the sliding components. In the fully extended state, the angle between the scissor rods of the scissor hinge is 90 degrees.

Figure 8 Schematic diagram of expandable unit.
When modeling the system using Cartesian coordinates, the state variables can be represented as Equation (17).

		(17)
where n representing the number of deployable units. The generalized force matrix, represented as F, is defined in Equation (18).

		(18)
where u denotes the control force applied to the system, while the load, represented as r, is maintained at a constant value of 5 N. The dimension of the generalized force matrix F is 3(4n+4)Ã1. In the context of a scissor-type deployable mast system, it is pertinent to note that their generalized coordinates are not mutually independent during the expanding process. Consequently, they must adhere to certain constraint conditions. In our analysis, we have taken into account constraints associated with both the rod length constraints  and position constraints . The constraint equations for the system can be expressed as Equation (19).
		(19)
where the dimensionality of the constraint equation  is (10+19n)Ã1. In consideration of the quality parameters, we have defined the density of the mast as 3000 kg/m^3, the cross-sectional area as 0.03 m2, and the length of the shear rod as 1.6 m. The dimension of the mass matrix M is given by 3(4n+4)Ã3(4n+4). In the system's initial state, the shear rod maintains a 10-degree inclination in a folded configuration. In this experiment, we have configured the number of expandable units in the system to be n=5.
Our primary objective is to optimize the control force u to ensure a constant ascent rate of 0.3 m/s for the uppermost node of the scissor-type expandable mast. The outcomes of this optimization procedure are illustrated in Figure 9(A), which demonstrates a gradual reduction in the control force over time.
To assess the effectiveness of our method in optimizing the control force, we directed our primary focus toward the nodes positioned identically within a specific section of the mast structure. Figures 9(B, C) illustrate the displacement variations and velocity fluctuations observed at the designated nodes. The experimental findings demonstrate the critical importance of optimizing control forces to ensure consistent and uniform motion across all units within the structure. Notably, we maintained a consistent velocity of approximately 0.3 m/s for the uppermost node, facilitating a seamless and expeditious deployment of the mast.
Moreover, as shown in Figures 9(D-F), the system effectively maintains stringent constraints, velocity constraints, and acceleration constraints within precise and highly accurate ranges. In Figure 10, we observe the deployment of the scissor-type deployable mast, transitioning from its initial folded configuration at t=0 s to achieving full extension by t=15.88 s.
Furthermore, we conducted a comparative study to investigate the impact of varying numbers of units on the outcomes. The results are presented in Table 3, illustrating scenarios with 5, 10, and 15 units, respectively. It is evident that as the number of expandable units increases, the maximum height of the structure also rises. Additionally, the proposed method consistently maintains a relatively low maximum error in target speed, hovering around 1e-5. Moreover, the constraints demonstrate stable performance, remaining within a moderate range. To simulate scenarios involving a greater number of scalable units, we utilized Cinema 4D simulation software, as depicted in Figure 11. The experimental results unmistakably indicate that the proposed method effectively optimizes the control force of the system, thereby achieving optimal control of the expansion process.


Figure 9 The results of MDANN method for scissor-type deployable mast system: (A) control force, (B) deployment position, (C) deployment speed, (D) constraints, (E) velocity constraints, (F) acceleration constraints.
Table 3 Comparison of results for scissor-type deployable mast systems with different numbers of units.
The number of units	The Maximum  height of expanded state	The maximum error of the target speed	The maximum error of the constraints	The maximum error of the velocity constraints	The maximum error of the  acceleration constraints
5	5.65	9.9987e-06	8.4818e-08 	9.8351e-09	4.9397e-08
10	11.31	9.9788e-06	9.2404e-07	2.0118e-07	1.4846e-06
15	16.97	9.9971e-06	4.2815e-07	1.3768e-07	2.7426e-05


Figure 10 Schematic diagram of scissor-type deployable mast system: (A) folded state, (B) extended state.

Figure 11 Schematic representation of scissor-type deployable mast system.

5    |  conclusion
Dynamical system learning is a challenging research area with significant practical applications. In this paper, we propose a novel MDANN method for addressing the challenges of learning dynamic systems, particularly those characterized by rigidity. Our method explicitly enforces constraints using a system of DAE, enabling better learning of Lagrangian quantities. Additionally, we introduce a multiscale structure to mitigate the problem of overlapping frequency components within physical processes. Subsequently, we apply this method to address the challenges posed by the learning of a double pendulum system, a coupled pendulum system, and the optimization of control forces for a scissor-type deployable mast system. While our method exhibits notable enhancements in terms of evaluation metrics, there remains ample scope for performance enhancement, especially in rigid conditions. Future research endeavors should prioritize issues such as elevating the precision of dynamical system learning and unraveling the intricate relationship between sampling step size and learning accuracy.